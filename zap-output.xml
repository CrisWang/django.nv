<?xml version="1.0"?>
<OWASPZAPReport programName="ZAP" version="2.14.0" generated="Sat, 15 Feb 2025 09:23:15">
	
		<site name="https://prod-ruzg4nsx.lab.practical-devsecops.training" host="prod-ruzg4nsx.lab.practical-devsecops.training" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10202</pluginid>
						<alertRef>10202</alertRef>
						<alert>Absence of Anti-CSRF Tokens</alert>
						<name>Absence of Anti-CSRF Tokens</name>
						<riskcode>2</riskcode>
						<confidence>1</confidence>
						<riskdesc>Medium (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;No Anti-CSRF tokens were found in a HTML submission form.&lt;/p&gt;&lt;p&gt;A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF attacks are effective in a number of situations, including:&lt;/p&gt;&lt;p&gt;    * The victim has an active session on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is authenticated via HTTP auth on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is on the same local network as the target site.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF has primarily been used to perform an action against a target site using the victim&apos;s privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form method=&quot;post&quot; role=&quot;form&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;email&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password/</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;http://dpaste.com/&quot; name=&quot;pasteform&quot; id=&quot;pasteform&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;language&quot; &quot;poster&quot; &quot;source&quot; &quot;title&quot; ].</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;For example, use anti-CSRF packages such as the OWASP CSRFGuard.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Use the ESAPI Session Management control.&lt;/p&gt;&lt;p&gt;This control includes a component for CSRF.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not use the GET method for any request that triggers a state change.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;email&quot; ].&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://cwe.mitre.org/data/definitions/352.html&lt;/p&gt;</reference>
						<cweid>352</cweid>
						<wascid>9</wascid>
						<sourceid>106</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/redirects/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>11</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://web.dev/articles/csp&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10040</pluginid>
						<alertRef>10040</alertRef>
						<alert>Secure Pages Include Mixed Content (Including Scripts)</alert>
						<name>Secure Pages Include Mixed Content (Including Scripts)</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes mixed content, that is content accessed via HTTP instead of HTTPS.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/brokenauth/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/idor/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/injection/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/misconfig/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/redirects/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>http://html5shim.googlecode.com/svn/trunk/html5.js</evidence>
									<otherinfo>tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js
</otherinfo>
								</instance>
							
						</instances>
						<count>13</count>
						<solution>&lt;p&gt;A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.&lt;/p&gt;&lt;p&gt;The page must not contain any content that is transmitted over unencrypted HTTP.&lt;/p&gt;&lt;p&gt; This includes content from third party sites.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;tag=script src=http://html5shim.googlecode.com/svn/trunk/html5.js&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html&lt;/p&gt;</reference>
						<cweid>311</cweid>
						<wascid>4</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10099</pluginid>
						<alertRef>10099</alertRef>
						<alert>Source Code Disclosure - SQL</alert>
						<name>Source Code Disclosure - SQL</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Application Source Code was disclosed by the web server - SQL&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/injection/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT 1 FROM USER WHERE user_id </evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that application Source Code is not available with alternative extensions, and ensure that source code is not present within other files or data deployed to the web server, or served by the web server. &lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://www.wsj.com/articles/BL-CIOB-2999&lt;/p&gt;</reference>
						<cweid>540</cweid>
						<wascid>13</wascid>
						<sourceid>74</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90003</pluginid>
						<alertRef>90003</alertRef>
						<alert>Sub Resource Integrity Attribute Missing</alert>
						<name>Sub Resource Integrity Attribute Missing</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content. &lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fonts.googleapis.com/css?family=PT+Sans:300,400,400italic,700&quot; &gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fonts.googleapis.com/css?family=Ubuntu:300,400,400italic,700&quot; &gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fonts.googleapis.com/css?family=PT+Sans:300,400,400italic,700&quot; &gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fonts.googleapis.com/css?family=Ubuntu:300,400,400italic,700&quot; &gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fonts.googleapis.com/css?family=PT+Sans:300,400,400italic,700&quot; &gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fonts.googleapis.com/css?family=Ubuntu:300,400,400italic,700&quot; &gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Provide a valid integrity attribute to the tag.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity&lt;/p&gt;</reference>
						<cweid>345</cweid>
						<wascid>15</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10003</pluginid>
						<alertRef>10003</alertRef>
						<alert>Vulnerable JS Library</alert>
						<name>Vulnerable JS Library</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The identified library bootstrap, version 3.2.0 is vulnerable.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>* Bootstrap v3.2.0</evidence>
									<otherinfo>CVE-2018-14041
CVE-2019-8331
CVE-2018-20677
CVE-2018-20676
CVE-2018-14042
CVE-2016-10735
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/jquery-1.8.3.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>jquery-1.8.3.min.js</evidence>
									<otherinfo>CVE-2020-11023
CVE-2020-11022
CVE-2015-9251
CVE-2019-11358
CVE-2020-7656
CVE-2012-6708
</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Please upgrade to the latest version of bootstrap.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;CVE-2018-14041&lt;/p&gt;&lt;p&gt;CVE-2019-8331&lt;/p&gt;&lt;p&gt;CVE-2018-20677&lt;/p&gt;&lt;p&gt;CVE-2018-20676&lt;/p&gt;&lt;p&gt;CVE-2018-14042&lt;/p&gt;&lt;p&gt;CVE-2016-10735&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://github.com/twbs/bootstrap/issues/28236&lt;/p&gt;&lt;p&gt;https://github.com/advisories/GHSA-pj7m-g53m-7638&lt;/p&gt;&lt;p&gt;https://github.com/twbs/bootstrap/issues/20184&lt;/p&gt;&lt;p&gt;https://github.com/advisories/GHSA-ph58-4vrj-w6hr&lt;/p&gt;&lt;p&gt;https://github.com/twbs/bootstrap/issues/20631&lt;/p&gt;&lt;p&gt;https://github.com/advisories/GHSA-4p24-vmcr-4gqj&lt;/p&gt;&lt;p&gt;https://github.com/advisories/GHSA-9v3m-8fp8-mj99&lt;/p&gt;&lt;p&gt;https://nvd.nist.gov/vuln/detail/CVE-2018-20676&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</reference>
						<cweid>829</cweid>
						<wascid>-1</wascid>
						<sourceid>114</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10020</pluginid>
						<alertRef>10020-4</alertRef>
						<alert>X-Frame-Options Setting Malformed</alert>
						<name>X-Frame-Options Setting Malformed</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;An X-Frame-Options header was present in the response but the value was not correctly set.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/brokenauth/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/idor/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/injection/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence>ALLOWALL</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>11</count>
						<solution>&lt;p&gt;Ensure a valid setting is used on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it&apos;s part of a FRAMESET) then you&apos;ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY.  Alternatively consider implementing Content Security Policy&apos;s &quot;frame-ancestors&quot; directive.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7034#section-2.1&lt;/p&gt;</reference>
						<cweid>1021</cweid>
						<wascid>15</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90022</pluginid>
						<alertRef>90022</alertRef>
						<alert>Application Error Disclosure</alert>
						<name>Application Error Disclosure</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password/</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>HTTP/1.1 500 Internal Server Error</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>121</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>POST</method>
									<param>sessionid</param>
									<attack></attack>
									<evidence>set-cookie: sessionid</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>93</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10011</pluginid>
						<alertRef>10011</alertRef>
						<alert>Cookie Without Secure Flag</alert>
						<name>Cookie Without Secure Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>POST</method>
									<param>sessionid</param>
									<attack></attack>
									<evidence>set-cookie: sessionid</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;</reference>
						<cweid>614</cweid>
						<wascid>13</wascid>
						<sourceid>93</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10017</pluginid>
						<alertRef>10017</alertRef>
						<alert>Cross-Domain JavaScript Source File Inclusion</alert>
						<name>Cross-Domain JavaScript Source File Inclusion</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes one or more script files from a third-party domain.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/brokenauth/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/csrf/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/idor/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/injection/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/misconfig/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/redirects/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param>http://html5shim.googlecode.com/svn/trunk/html5.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>14</count>
						<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted sources, and the sources can&apos;t be controlled by end users of the application.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>829</cweid>
						<wascid>15</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10110</pluginid>
						<alertRef>10110</alertRef>
						<alert>Dangerous JS Functions</alert>
						<name>Dangerous JS Functions</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A dangerous JS function seems to be in use that would leave the site vulnerable.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/highlight.pack.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/jquery-1.8.3.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;See the references for security advice on the use of these functions.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://angular.io/guide/security&lt;/p&gt;</reference>
						<cweid>749</cweid>
						<wascid>-1</wascid>
						<sourceid>101</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10063</pluginid>
						<alertRef>10063-1</alertRef>
						<alert>Permissions Policy Header Not Set</alert>
						<name>Permissions Policy Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.scrollTo.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy&lt;/p&gt;&lt;p&gt;https://developer.chrome.com/blog/feature-policy/&lt;/p&gt;&lt;p&gt;https://scotthelme.co.uk/a-new-security-header-feature-policy/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-feature-policy/&lt;/p&gt;&lt;p&gt;https://www.smashingmagazine.com/2018/12/feature-policy/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>2</pluginid>
						<alertRef>2</alertRef>
						<alert>Private IP Disclosure</alert>
						<name>Private IP Disclosure</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password/</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>10.1.209.103</evidence>
									<otherinfo>10.1.209.103
172.17.0.1
</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;10.1.209.103&lt;/p&gt;&lt;p&gt;172.17.0.1&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc1918&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>121</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/bootstrap.min.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/font-awesome.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/style.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.scrollTo.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.18.0 (Ubuntu)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>11</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)&lt;/p&gt;&lt;p&gt;https://www.troyhunt.com/shhh-dont-let-your-response-headers/&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035-1</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/bootstrap.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/bootstrap.min.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/font-awesome.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/style.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.dcjqaccordion.2.7.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.scrollTo.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>13</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;https://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/bootstrap.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/bootstrap.min.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/font-awesome.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/railscasts.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/style.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.dcjqaccordion.2.7.js</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.scrollTo.min.js</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>11</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10111</pluginid>
						<alertRef>10111</alertRef>
						<alert>Authentication Request Identified</alert>
						<name>Authentication Request Identified</name>
						<riskcode>0</riskcode>
						<confidence>3</confidence>
						<riskdesc>Informational (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The given request has been identified as an authentication request. The &apos;Other Info&apos; field contains a set of key=value lines which identify any relevant fields. If the request is in a context which has an Authentication Method set to &quot;Auto-Detect&quot; then this rule will change the authentication to match the request identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>POST</method>
									<param>username</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=username
userValue=ZAP
passwordParam=password
referer=https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;userParam=username&lt;/p&gt;&lt;p&gt;userValue=ZAP&lt;/p&gt;&lt;p&gt;passwordParam=password&lt;/p&gt;&lt;p&gt;referer=https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/auth-req-id/&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>93</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.dcjqaccordion.2.7.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected in the element starting with: &quot;//				// create array from cookie string&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.nicescroll.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected 2 times, the first in the element starting with: &quot;    b.hasmoving=!1;b.lastmouseup=!1;b.scrollmom.reset(d.clientX,d.clientY);if(!g.cantouch&amp;&amp;!this.istouchcapable&amp;&amp;!g.hasmstouch){&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>DEBUG</evidence>
									<otherinfo>The following pattern was used: \bDEBUG\b and was detected in the element starting with: &quot;      You&apos;re seeing this error because you have &lt;code&gt;DEBUG = True&lt;/code&gt; in&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&lt;script&gt;

hljs.initHighlightingOnLoad();

$(function(){
    $(&apos;select.styled&apos;).customSelect();
});

$(&apos;#creds&apos;).hide();

$(&apos;#sho&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/brokenauth/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&lt;script&gt;

hljs.initHighlightingOnLoad();

$(function(){
    $(&apos;select.styled&apos;).customSelect();
});

$(&apos;#creds&apos;).hide();

$(&apos;#sho&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&lt;script&gt;

hljs.initHighlightingOnLoad();

$(function(){
    $(&apos;select.styled&apos;).customSelect();
});

$(&apos;#creds&apos;).hide();

$(&apos;#sho&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/redirects/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&lt;script&gt;

hljs.initHighlightingOnLoad();

$(function(){
    $(&apos;select.styled&apos;).customSelect();
});

$(&apos;#creds&apos;).hide();

$(&apos;#sho&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;&lt;script&gt;

hljs.initHighlightingOnLoad();

$(function(){
    $(&apos;select.styled&apos;).customSelect();
});

$(&apos;#creds&apos;).hide();

$(&apos;#sho&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>admin</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected in the element starting with: &quot;&lt;!-- &lt;tr&gt;&lt;th&gt;&lt;label for=&quot;id_password&quot;&gt;Password:&lt;/label&gt;&lt;/th&gt;&lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;password&quot; maxlength=&quot;128&quot; required id=&quot;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;&lt;!--search &amp; user info start--&gt;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/brokenauth/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;&lt;!--search &amp; user info start--&gt;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;&lt;!--search &amp; user info start--&gt;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/redirects/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;&lt;!--search &amp; user info start--&gt;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 3 times, the first in the element starting with: &quot;&lt;!--search &amp; user info start--&gt;&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>14</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bFROM\b and was detected in the element starting with: &quot;//				// create array from cookie string&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>82</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password/</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; onclick=&quot;return switchPastebinFriendly(this);&quot;&gt;
    Switch to copy-and-paste view&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>121</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/brokenauth/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/exposure/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/idor/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/injection/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/redirects/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/tutorials/xss/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10112</pluginid>
						<alertRef>10112</alertRef>
						<alert>Session Management Response Identified</alert>
						<name>Session Management Response Identified</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The given response has been identified as containing a session management token. The &apos;Other Info&apos; field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to &quot;Auto-Detect&quot; then this rule will change the session management to use the tokens identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login/</uri>
									<method>POST</method>
									<param>sessionid</param>
									<attack></attack>
									<evidence>.eJxrYJ06nQECaqdo9PDGJ5aWZMSXFqcWxWemTOlhNJvSI4QklpSYnJ2aB5TQTMlKzEvP10vOzyspykzSAynRg8oW6_nmp6TmOMHU8iMZkJFYnDGlR8MiKdEszdAkJSnN3CjR0jLNyDDZ3MTAxMwizcIg1dzENC0lOcnMJDllSqkeAFP9OOk:1tjEOG:luaS-Bq9ZFP3ox7jBf3D2-nSVI0</evidence>
									<otherinfo>
cookie:sessionid</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password/</uri>
									<method>POST</method>
									<param>sessionid</param>
									<attack></attack>
									<evidence>.eJxrYJ06nQECaqdo9PDGJ5aWZMSXFqcWxWemTOlhNJvSI4QklpSYnJ2aB5TQTMlKzEvP10vOzyspykzSAynRg8oW6_nmp6TmOMHU8iMZkJFYnDGlR8MiKdEszdAkJSnN3CjR0jLNyDDZ3MTAxMwizcIg1dzENC0lOcnMJDllSqkeAFP9OOk:1tjEOG:luaS-Bq9ZFP3ox7jBf3D2-nSVI0</evidence>
									<otherinfo>
cookie:sessionid</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;/p&gt;&lt;p&gt;cookie:sessionid&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>93</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10049</pluginid>
						<alertRef>10049</alertRef>
						<alert>Storable and Cacheable Content</alert>
						<name>Storable and Cacheable Content</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users.  If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where &quot;shared&quot; caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/bootstrap.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/font-awesome.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/railscasts.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/css/style.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/backend/jquery.scrollTo.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/static/taskManager/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/forgot_password</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/login</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://prod-ruzg4nsx.lab.practical-devsecops.training/taskManager/register</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
						</instances>
						<count>13</count>
						<solution>&lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request. &lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc7234&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc7231&lt;/p&gt;&lt;p&gt;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&lt;/p&gt;</reference>
						<cweid>524</cweid>
						<wascid>13</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
</OWASPZAPReport>